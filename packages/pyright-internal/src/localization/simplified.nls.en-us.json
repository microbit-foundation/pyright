{
    "Diagnostic": {
        "argAssignmentParam": "Argument does not match parameter type for parameter \"{paramName}\"",
        "argAssignmentParamFunction": "Argument does not match parameter type for parameter \"{paramName}\"",
        "argMissingForParam": "Argument missing for parameter {name}",
        "argMissingForParams": "Arguments missing for parameters {names}",
        "argMorePositionalExpectedCount": "Expected {expected} more positional arguments",
        "argMorePositionalExpectedOne": "Expected 1 more positional argument",
        "argPositional": "Expected positional argument",
        "argPositionalExpectedOne": "Expected 1 positional argument",
        "booleanIsLowerCase": "\"{name}\" is not defined, did you mean \"{booleanName}\"?",
        "breakOutsideLoop": "\"break\" can be used only within a loop",
        "continueOutsideLoop": "\"continue\" can be used only within a loop",
        "expectedAsAfterException": "Expected \"as\" after exception type",
        "expectedAssignRightHandExpr": "Expected expression to the right of \"=\"",
        "expectedBinaryRightHandExpr": "Expected expression to the right of operator",
        "expectedClassName": "Missing class name",
        "expectedCloseBrace": "Missing closing bracket \"}\"",
        "expectedCloseBracket": "Missing closing bracket \"]\"",
        "expectedCloseParen": "Missing closing bracket \")\"",
        "expectedColon": "Missing colon \":\"",
        "expectedDelExpr": "Missing expression after \"del\"",
        "expectedElse": "Missing \"else\"",
        "expectedEqualityOperator": "Expected equality operator, did you mean \"==\"?",
        "expectedExpr": "Missing expression",
        "expectedFunctionName": "Missing function name after \"def\"",
        "expectedIdentifier": "Missing identifier",
        "expectedImport": "Missing \"import\"",
        "expectedImportAlias": "Missing symbol after \"as\"",
        "expectedImportSymbols": "Expected one or more symbol names after import",
        "expectedIn": "Missing \"in\"",
        "expectedIndentedBlock": "Indentation missing",
        "expectedInExpr": "Missing expression after \"in\"",
        "expectedMemberName": "Missing member name after \".\"",
        "expectedModuleName": "Missing module name",
        "expectedNamedParameter": "Keyword parameter must follow \"*\"",
        "expectedNewlineOrSemicolon": "Unexpected extra content\nStatements must be one per line",
        "expectedOpenParen": "Missing opening bracket \"(\"",
        "expectedParamName": "Missing parameter name",
        "expectedSliceIndex": "Missing index or slice",
        "expectedYieldExpr": "Expected expression in yield statement",
        "importResolveFailure": "Module \"{importName}\" could not be found",
        "importSymbolUnknown": "\"{name}\" not found in module \"{moduleName}\"",
        "inconsistentIndent": "Indentation does not match the previous line",
        "inconsistentTabs": "Inconsistent use of tabs and spaces in indentation",
        "memberAccess": "Cannot access member \"{name}\" for type \"{type}\"",
        "memberDelete": "Cannot delete member \"{name}\" for type \"{type}\"",
        "memberSet": "Cannot assign member \"{name}\" for type \"{type}\"",
        "moduleUnknownMember": "\"{name}\" is not a known member of module \"{module}\"",
        "stringUnterminated": "String is not closed â€” missing quotation mark",
        "symbolIsUndefined": "\"{name}\" is not defined",
        "typeNotIterable": "Type is not iterable",
        "typeNotSupportBinaryOperator": "Operator \"{operator}\" not supported for this combination of types",
        "typeNotSupportBinaryOperatorBidirectional": "Operator \"{operator}\" not supported for this combination of types",
        "unaccessedClass": "Class \"{name}\" is unused",
        "unaccessedFunction": "Function \"{name}\" is unused",
        "unaccessedImport": "Import \"{name}\" is unused",
        "unaccessedSymbol": "\"{name}\" is unused",
        "unaccessedVariable": "Variable \"{name}\" is unused",
        "unexpectedIndent": "Unexpected indentation",
        "unreachableCode": "Code is unreachable\nThe logic of your program means this code will never run"
    }
}